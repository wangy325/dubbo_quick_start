<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="wy.dubbo"/>
    <context:property-placeholder location="classpath:spring/consumer.properties"/>

    <!-- consumer's application name, used for tracing dependency relationship (not a matching criterion), don't set it same as provider -->
    <dubbo:application name="${dubbo.application.name}">
        <!--    intrinsic qos config     -->
        <!--
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="33333"/>
        -->
    </dubbo:application>

    <!-- use zookeeper registry center to discover service -->
    <!-- <dubbo:registry address="${dubbo.registry.address}"/> -->

    <!-- use multicast registry center to discover service -->
    <dubbo:registry address="multicast://224.5.6.7:1234"/>

    <!-- generate proxy for the remote service, then demoService can be used in the same way as the local regular interface -->
    <dubbo:reference id="demoService" check="false" interface="wy.dubbo.api.DemoService"/>

    <!--provider.xml 设置 register="false"时, 调用本地启动的dubbo服务 -->
    <!--<dubbo:reference id="demoService" check="false" interface="wy.dubbo.api.DemoService" url="dubbo://192.168.11.107:20880"/>-->
</beans>